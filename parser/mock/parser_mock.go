// Code generated by MockGen. DO NOT EDIT.
// Source: ./parser.go

// Package mock_parser is a generated GoMock package.
package mock_parser

import (
	structs "github.com/g3co/ticket-sorter/structs"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIParser is a mock of IParser interface
type MockIParser struct {
	ctrl     *gomock.Controller
	recorder *MockIParserMockRecorder
}

// MockIParserMockRecorder is the mock recorder for MockIParser
type MockIParserMockRecorder struct {
	mock *MockIParser
}

// NewMockIParser creates a new mock instance
func NewMockIParser(ctrl *gomock.Controller) *MockIParser {
	mock := &MockIParser{ctrl: ctrl}
	mock.recorder = &MockIParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIParser) EXPECT() *MockIParserMockRecorder {
	return m.recorder
}

// Parse mocks base method
func (m *MockIParser) Parse(card string) (*structs.Card, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Parse", card)
	ret0, _ := ret[0].(*structs.Card)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Parse indicates an expected call of Parse
func (mr *MockIParserMockRecorder) Parse(card interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Parse", reflect.TypeOf((*MockIParser)(nil).Parse), card)
}
